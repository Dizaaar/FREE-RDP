name: PC

on:
  push:
    branches:
      - main  # Adjust branch name if necessary
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download ngrok
        run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

      - name: Extract ngrok
        run: Expand-Archive ngrok.zip

      - name: Auth ngrok
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Install Browsers
        run: |
          # Install Google Chrome
          Invoke-WebRequest "https://dl.google.com/chrome/install/GoogleChromeStandaloneEnterprise64.msi" -OutFile "ChromeInstaller.msi"
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", "ChromeInstaller.msi", "/quiet", "/norestart" -Wait
    
          # Install Firefox
          Invoke-WebRequest "https://download.mozilla.org/?product=firefox-msi-latest-ssl&os=win64&lang=en-US" -OutFile "FirefoxSetup.msi"
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", "FirefoxSetup.msi", "/quiet", "/norestart" -Wait

      - name: Install AnyDesk
        run: |
          Invoke-WebRequest "https://download.anydesk.com/AnyDesk.msi" -OutFile "AnyDeskInstaller.msi"
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", "AnyDeskInstaller.msi", "/quiet", "/norestart" -Wait

      - name: Install Steam
        run: |
          Invoke-WebRequest "https://steamcdn-a.akamaihd.net/client/installer/SteamSetup.exe" -OutFile "SteamSetup.exe"
          Start-Process -FilePath "SteamSetup.exe" -ArgumentList "/S" -Wait

      - name: Install Epic Games Launcher
        run: |
          Invoke-WebRequest "https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi" -OutFile "EpicGamesLauncherInstaller.msi"
          Start-Process -FilePath "msiexec.exe" -ArgumentList "/i", "EpicGamesLauncherInstaller.msi", "/quiet", "/norestart" -Wait

      - name: Install WinRAR 64-bit
        run: |
          Invoke-WebRequest "https://www.win-rar.com/fileadmin/winrar-versions/winrar/winrar-x64-700.exe" -OutFile "WinRARInstaller.exe"
          Start-Process -FilePath "WinRARInstaller.exe" -ArgumentList "/S" -Wait

      - name: Install VLC Media Player
        run: |
          Invoke-WebRequest "https://videolan.interhost.co.il/vlc/3.0.16/win64/vlc-3.0.16-win64.exe" -OutFile "vlc-3.0.16-win64.exe"
          Start-Process -FilePath "vlc-3.0.16-win64.exe" -ArgumentList "/L=1033 /S" -Wait

      - name: Install OBS Studio
        run: |
          Invoke-WebRequest "https://cdn-fastly.obsproject.com/downloads/OBS-Studio-30.1.2-Full-Installer-x64.exe" -OutFile "OBS-Studio-Installer.exe"
          Start-Process -FilePath "OBS-Studio-Installer.exe" -ArgumentList "/S" -Wait

      - name: Install TaskbarX
        run: |
          $taskbarXPath = "$env:ProgramFiles\TaskbarX"
          Invoke-WebRequest "https://github.com/ChrisAnd1998/TaskbarX/releases/download/1.7.8.0/TaskbarX_1.7.8.0_x64.zip" -OutFile "TaskbarX.zip"
          Expand-Archive -Path "TaskbarX.zip" -DestinationPath $taskbarXPath
          Start-Process -FilePath "$taskbarXPath\TaskbarX.exe" -WindowStyle Hidden

      - name: Download files
        run: |
          $DesktopPath = [Environment]::GetFolderPath("Desktop")
          $FilesToDownload = @(
              "MSI APP Player.exe",
              "BlueStacksInstaller_5.21.500.1009_native_9abaec53e09f39c6f24332964ecac321_MzsxNSwwOzUsMTsxNSw0OzE1.exe",
              "BlueStacksInstaller_4.280.4.4002_native_311cc3751d83f55754cd0fc1705efda2.exe",
              "GLP_installer_900223150_market.exe"
          )
          $GitHubRepository = "https://github.com/Dizaaar/FREE-RDP.git"

          foreach ($file in $FilesToDownload) {
              $fileUrl = "$GitHubRepository/blob/main/$file"
              $downloadPath = Join-Path $DesktopPath $file
              Invoke-WebRequest -Uri $fileUrl -OutFile $downloadPath
          }

      - name: Set Wallpaper
        run: |
          Invoke-WebRequest "https://github.com/Dizaaar/FREE-RDP/raw/main/Wallpaper.jpg" -OutFile "Wallpaper.jpg"
          reg add "HKCU\Control Panel\Desktop" /v Wallpaper /t REG_SZ /d "$(pwd)\Wallpaper.jpg" /f

      - name: Management Icons
        run: |
          # Show Desktop Icons
          $desktopPath = [System.Environment]::GetFolderPath('Desktop')
          $shell = New-Object -ComObject WScript.Shell
          $icons = @{
              "User's Files" = "shell:Profile"
              "This PC" = "::{20D04FE0-3AEA-1069-A2D8-08002B30309D}"
              "Network" = "shell:NetworkPlacesFolder"
              "Control Panel" = "shell:ControlPanelFolder"
              "Recycle Bin" = "shell:RecycleBinFolder"
          }
          foreach ($icon in $icons.Keys) {
              $iconPath = "$desktopPath\$icon.lnk"
              $targetPath = $icons[$icon]
              $shortcut = $shell.CreateShortcut($iconPath)
              $shortcut.TargetPath = $targetPath
              $shortcut.Save()
          }

          # Hide Desktop Icons
          cd /d C:\actions\runner-provisioner-Windows
          attrib +h pc*

      - name: Change color mode to dark
        run: |
          reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize /v AppsUseLightTheme /t REG_DWORD /d 0 /f
          reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize /v SystemUsesLightTheme /t REG_DWORD /d 0 /f

      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

      - name: Enable Remote Desktop Firewall Rule
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Set User Authentication for RDP
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      - name: Set Local User Password
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Create Tunnel
        run: .\ngrok\ngrok.exe tcp 3389
